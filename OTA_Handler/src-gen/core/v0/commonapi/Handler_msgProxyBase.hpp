/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.2.14.v202310241605.
* Used org.franca.core 0.13.1.201807231814.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V0_COMMONAPI_Handler_msg_PROXY_BASE_HPP_
#define V0_COMMONAPI_Handler_msg_PROXY_BASE_HPP_

#include <v0/commonapi/Handler_msg.hpp>



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#define HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

#include <vector>

#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#if defined (HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE)
#undef COMMONAPI_INTERNAL_COMPILATION
#undef HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

namespace v0 {
namespace commonapi {

class Handler_msgProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::Event<
        int32_t
    > HandlerStatusEvent;

    typedef std::function<void(const CommonAPI::CallStatus&, const int32_t&)> PushUpdateAsyncCallback;

    virtual void pushUpdate(CommonAPI::ByteBuffer _firmware, CommonAPI::ByteBuffer _signature, CommonAPI::CallStatus &_internalCallStatus, int32_t &_result, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> pushUpdateAsync(const CommonAPI::ByteBuffer &_firmware, const CommonAPI::ByteBuffer &_signature, PushUpdateAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual HandlerStatusEvent& getHandlerStatusEvent() = 0;

    virtual std::future<void> getCompletionFuture() = 0;
};

} // namespace commonapi
} // namespace v0


// Compatibility
namespace v0_1 = v0;

#endif // V0_COMMONAPI_Handler_msg_PROXY_BASE_HPP_
